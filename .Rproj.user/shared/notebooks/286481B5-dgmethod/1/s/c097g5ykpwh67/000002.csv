"0","# Creates an adjacency matrix by combining data from junctions.matrix and edges.matrix"
"0","#"
"0","# @param matrix jm <- junctions.matrix"
"0","# @param matrix em <- edges.matrix"
"0","# @return matrix am <- adjacency.matrix"
"0","jmem2am <- function(jm,em){"
"0","  # Get the size of the ajacentcy matrix"
"0","  jm.amt <- length(names(jm[,1]))"
"0","  "
"0","  # Store the for the rows and columns"
"0","  jm.names <- names(jm[,1])"
"0","  "
"0","  # Initialize an empty matrix"
"0","  am <- matrix("
"0","    data=rep(0, jm.amt * jm.amt),"
"0","    ncol=jm.amt,"
"0","    nrow=jm.amt,"
"0","    byrow=FALSE"
"0","  )"
"0","  "
"0","  # Set row and column names"
"0","  rownames(am) <- jm.names"
"0","  colnames(am) <- jm.names"
"0","  "
"0","  # Fill the adjacency matrix"
"0","  for (i in 1:nrow(em)){"
"0","    from <- paste0(em[i,'from'])"
"0","    to <- paste0(em[i,'to'])"
"0","    row.index <- match(from,rownames(am))"
"0","    col.index <- match(to,colnames(am))"
"0","    am[row.index,col.index] <- 1"
"0","  }"
"0","  "
"0","  return(am)"
"0","}"
